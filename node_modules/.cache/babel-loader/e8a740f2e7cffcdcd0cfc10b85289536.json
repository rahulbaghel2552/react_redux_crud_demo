{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\OneDrive\\\\Desktop\\\\react_js\\\\redux_crud\\\\src\\\\components\\\\contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport { selectAllContact } from \"../../actions/contactAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [checkAll, setCheckAll] = useState(false);\n  const contacts = useSelector(state => state.contact.contacts);\n  useEffect(() => {\n    if (checkAll) {\n      dispatch(selectAllContact(contacts.map(contact => contact.id)));\n    }\n  }, [checkAll]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"contact_table shadow \",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"bg-dark text-white font-bold \",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"contact_table_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              value: \"\",\n              id: \"flexCheckDefault\",\n              onClick: () => setCheckAll(!checkAll)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              for: \"flexCheckDefault\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Phone No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Contact, {\n        contact: contact,\n        checkAll: checkAll\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"Tgjo5PKB1TGv3/rrjtCtVi1Y6XA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/rahul/OneDrive/Desktop/react_js/redux_crud/src/components/contacts/Contacts.js"],"names":["useSelector","useDispatch","useState","useEffect","Contact","selectAllContact","Contacts","dispatch","checkAll","setCheckAll","contacts","state","contact","map","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMQ,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,QAA1B,CAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,QAAJ,EAAc;AACZD,MAAAA,QAAQ,CAACF,gBAAgB,CAACK,QAAQ,CAACG,GAAT,CAAaD,OAAO,IAAIA,OAAO,CAACE,EAAhC,CAAD,CAAjB,CAAR;AACD;AACF,GAJQ,EAIN,CAACN,QAAD,CAJM,CAAT;AAMA,sBACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,+BAAjB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,gCACE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,KAAK,EAAC,EAHR;AAIE,cAAA,EAAE,EAAC,kBAJL;AAKE,cAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,CAACD,QAAF;AAL5B;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE;AAAA,gBACGE,QAAQ,CAACG,GAAT,CAAcD,OAAD,iBACZ,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA,OAAlB;AAA4C,QAAA,QAAQ,EAAEJ;AAAtD,SAAgCI,OAAO,CAACE,EAAxC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA3CD;;GAAMR,Q;UACaL,W,EAEAD,W;;;KAHbM,Q;AA6CN,eAAeA,QAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { selectAllContact } from \"../../actions/contactAction\";\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const [checkAll, setCheckAll] = useState(false);\r\n  const contacts = useSelector((state) => state.contact.contacts);\r\n\r\n  useEffect(() => {\r\n    if (checkAll) {\r\n      dispatch(selectAllContact(contacts.map(contact => contact.id)))\r\n    }\r\n  }, [checkAll]);\r\n\r\n  return (\r\n    <table className=\"contact_table shadow \">\r\n      <thead className=\"bg-dark text-white font-bold \">\r\n        <tr className=\"contact_table_row\">\r\n          <th>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id=\"flexCheckDefault\"\r\n                onClick={() => setCheckAll(!checkAll)}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                for=\"flexCheckDefault\"\r\n              ></label>\r\n            </div>\r\n          </th>\r\n          <th>Name</th>\r\n          <th>Phone No.</th>\r\n          <th>Email</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {contacts.map((contact) => (\r\n          <Contact contact={contact} key={contact.id} checkAll={checkAll} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}